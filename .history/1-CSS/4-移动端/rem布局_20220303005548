1、rem基础
    rem(root rem)是一个相对单位，类似于em
    但是em是相对于父元素的字体大小来说的；而rem是相对于html元素的字体大小来说的
    例如根元素(html)设置font-size=12px,非根元素设置为width:2rem,则换成px表示就是24px
    rem的优点就是可以通过修改html里面的文字大小来改变页面中元素的大小 可以实现整体控制

2、媒体查询：最好从小到大写
    使用@media查询，可以针对不同的媒体类型定义不同的样式
    @media可以针对不同的屏幕尺寸设置不同的样式
    当你重置浏览器大小的过程中，页面也会根据浏览器的宽度和高度重新渲染页面
    目前针对很多苹果手机、android手机、平板等设备都用得到多媒体查询

    语法：@media mediatype and/not/only (media feature) {
        CSS-Code;
    }
     
     mediatype:媒体类型（查询类型）
        all:用于所有设备   print:用于打印机和打印预览     *screen:用于电脑屏幕、平板电脑、智能手机等
    
    and/not/only:关键字（关键字将媒体类型或者多个媒体特性连接到一起作为媒体查询的条件）
        and:可以将多个媒体特性连接在一起，相当于“且”
        not:排除某个媒体类型，相当于“非”，可以省略
        only:指定某个特定的媒体类型，可以省略

    media feature:媒体特性，必须有小括号包含
        width:定义输出设备中页面可见区域的宽度
        min-width:定义输出设备中页面最小可见区域的宽度
        max-width:定义输出设备中页面最大可见区域的宽度

    例子：@media screen and (max-width: 880px) { ;数字后面必须加单位
        body {
            background-color: pink; 这句话的意思是在我们的屏幕上 并且 在最大的宽度是880px 设置我们想要的样式（样式是背景颜色为粉色）
        }
    }

3、引入资源（了解即可）：使用媒体查询时最好从小到大
    当样式比较繁多的时候，可以针对不同的设备使用不同的stylesheets(样式表)，就是直接在link中判断设备的尺寸，然后引入不同的CSS文件
    <link rel="stylesheet" href="style320.css" media="screen and (min-width: 320px)">


5、less编译
    5.1 变量：是指没有固定的值
            变量命名规范：必须有@为前缀  不能包含特殊字符  不能以数字开头  大小写敏感

    5.2 less嵌套：
        通常情况下直接写在父元素里面就可以了
        但是遇到(交集/伪类/伪元素选择器)：内层选择器前面没有&符号的，则会被解析为父选择器的后代，如果想要对自身写伪类，则需要加&;例如&::before

    5.3 less运算
        运算符的左右两侧必须有一个空格隔开
        两个数参与运算，如果只有一个数有单位，则最后的结果以这个单位为准
        两个数参与运算，如果两个数都有单位，而且是不一样的单位，最后的结果以第一个单位为准

    5.4 less最终适配方案
        首先选一套标准尺寸呢 假设是750px
        然后用屏幕尺寸/划分的分数,得到了html里面的文字大小 但是应该设定不同屏幕下的文字大小是不一样的
        最后页面元素的rem值=页面元素在750像素下的px值/html里面的文字大小（即页面元素值px/html-font-size字体大小）
        总结：页面元素的rem值=页面元素值(px)/(屏幕宽度/划分的份数)
        

6、rem和em的区别
    6.1 em作为font-size的单位时，其代表父元素的字体大小，em作为其他属性单位时，代表自身字体大小（例如行高单位）
    6.2 rem作用于非根元素时，相对于根元素字体大小；rem作用于根元素字体大小时，相对于其出初始字体大小
    