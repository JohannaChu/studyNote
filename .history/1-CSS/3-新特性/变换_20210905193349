1、2D转换
    1.1 移动translate
        语法：transform:translate(x,y); 其中x是指向右边的横轴，y是指向下边的横轴（x越往右越大）
              transform:translateX(n);
              transform:translateY(n);
        最大的优点是不会影响其他元素的位置，但是对行内标签没有效果（例如span）
        translate里面可以是数字或者百分比，但是百分比单位是相对于自身元素的translate；比如盒子宽度是100px，设置translateX(50%),则向右移动50px
        常用语句：transform:translate(-50%,-50%) 代表盒子往上和往左走自己高度和宽度的一半

    1.2 转换rotate
        语法：transform:ratatr(度数) 单位是deg 例如：rate(45deg)
        角度为正时是顺时针，负数则为逆时针，默认旋转的中心点是元素的中心点

        设置转换点：transform-orign:x y; (ps:x y 中间要用空格隔开)
            x,y默认的中心带你是元素的中心点（50% 50%）
            还可以给x y设置像素（例如transform-orign：15px 10px） 和方位名词（例如transform-orign：left  bottom就是以左下角为中心点）

    1.3 缩放scale
        语法：transform:scale(x,y);
        里面写的数字不跟单位，表示倍数的意思; 例如transform:scale(2,2)就是宽度和高度都修改为原来的两倍 等价于transform:scale(2)
        也可以进行等比例缩放，例如scale(0.5)
        scale缩放最大的优点就是可以设置转换中心点缩放，是默认以中心点缩放的并且不影响其他盒子

    1.4 综合写法
        同时使用多个转换，其格式为：transform:translate() rotate() scale();记住要加空格隔开
        其顺序会影响最后的转换效果（先旋转会改变坐标轴方向）; 因此当我们同时有位移和其他属性的时候，记得要将位移放在最前面（否则会改变坐标轴方向）


2、动画:先定义动画，再调用动画
    2.1 用keyframes定义动画：0%是动画的开始状态，100%是动画的结束状态（关键词from to也有同样效果）
        语法：@keyframes {
            0% {
                transform:translateX(0px);
            }
            100% {
                transform:translateX(1000px);
            }
        }
        其中次数可以改变无限次，例如状态可以为0%，20%，40%，60%，80%，100%的6个状态;而不单单是0%和100%的两种状态

        2.2 调用动画
            animation-name:动画名字; 例如@keyframes move {0% {width:100px} 100% {width:900px}}其中动画名字则为move
            animation-duration:持续时间;
            常常使用简写属性：animation:动画名称 持续时间 运动曲线 何时开始 播放次数 是否反方向 动画起始或者结束状态;

        2.3 常用属性
            animation-timing-function:规定动画的运动曲线，默认是ease，可以设置为匀速inliner；
                常用的另一个值是steps() 指定了时间函数中的间隔数量（步长）
            animation-delay:规定动画何时开始，默认是0s
            animation-interation-count:规定动画被播放的次数，默认是1，可以设置为infinite为无限次数
            animation-direction:规定动画是否在下个周期逆向播放，默认是normal，可以设置为alternate逆播放
            animation-play-state:规定动画是否正在运行或者暂停，默认是running，可以设置为暂停paused
            animation-fill-mode:规定动画结束后状态，默认的是backwards回到起始状态，可以设置为forwards停在最终状态


3、3D转换：x轴：水平向右  y轴：垂直向下   z轴：垂直屏幕（往外是正值）
    3.1 3D移动
        语法：transform:translateZ();后面一般跟px(单位)，一般不用百分比
        transform:translate3d(x,y,z);

    3.2 透视：perspective(*透视写在被观察元素的父盒子上)
        而translateZ是写在要被改动的元素上的

    3.3 旋转 rotate3d
        transform: rotateX(45deg)
        方向：左手法则（大拇指指向x轴正值，其他四指就是x轴的正方向）
        transform:rotateY(45deg)
        方向：左手法则（大拇指指向y轴正值，其他四指就是y轴的正方向）
        transform: rotateZ(45deg)：和2D平面的旋转效果一样

    3.4 3D呈现transform_style
        控制子元素是否开启三维立体环境
        transform-style：flag 子元素不开启3d立体空间（默认的）
        transform-style:perserve-3d 子元素开启立体空间
        **代码是写给父级盒子的，但是影响的是子盒子

        

